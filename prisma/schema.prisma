generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model products {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(30)
  price             Int
  image             String              @db.VarChar(255)
  created_at        DateTime            @default(now()) @db.Timestamp(0)
  updated_at        DateTime            @default(now()) @db.Timestamp(0)
  transactions_item transactions_item[]
}

model transactions {
  id                Int                 @id @default(autoincrement())
  total             Int
  status            transactions_status
  customer_name     String              @db.VarChar(255)
  customer_email    String              @db.VarChar(255)
  snap_token        String?             @db.VarChar(255)
  snap_redirect_url String?             @db.VarChar(255)
  payment_method    String              @db.VarChar(110)
  created_at        DateTime            @default(now()) @db.Timestamp(0)
  updated_at        DateTime            @default(now()) @db.Timestamp(0)
}

model transactions_item {
  id            Int      @id @default(autoincrement())
  users_id      Int
  products_id   Int
  products_name String   @db.VarChar(255)
  price         Int
  quantity      Int
  created_at    DateTime @default(now()) @db.Timestamp(0)
  updated_at    DateTime @default(now()) @db.Timestamp(0)
  products      products @relation(fields: [products_id], references: [id], onUpdate: Restrict, map: "transactions_item_products_id_fk")
  users         users    @relation(fields: [users_id], references: [id], onUpdate: Restrict, map: "transactions_item_users_id_fk")

  @@index([products_id], map: "transactions_item_products_id_fk")
  @@index([users_id], map: "transactions_item_users_id_fk")
}

model sample {
  id       Int    @id @default(autoincrement())
  username String @db.VarChar(100)
  city     String @db.VarChar(100)
}

model users {
  id                Int                 @id @default(autoincrement())
  email             String              @db.VarChar(100)
  password          String              @db.Text
  name              String              @db.VarChar(100)
  token             String?             @db.Text
  created_at        DateTime            @default(now()) @db.Timestamp(0)
  updated_at        DateTime            @default(now()) @db.Timestamp(0)
  transactions_item transactions_item[]
}

enum transactions_status {
  PENDING_PAYMENT
  PAID
  CANCELLED
}
